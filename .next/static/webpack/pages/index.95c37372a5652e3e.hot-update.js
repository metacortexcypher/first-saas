"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/AlertBox.js":
/*!********************************!*\
  !*** ./components/AlertBox.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst AlertBox = ()=>{\n    _s();\n    const [showAlertBox, setShowAlertBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const closeAlertBox = ()=>{\n        setShowAlertBox(false);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AlertBox.useEffect\": ()=>{\n            const timer = setTimeout({\n                \"AlertBox.useEffect.timer\": ()=>{\n                    setShowAlertBox(true);\n                }\n            }[\"AlertBox.useEffect.timer\"], 4000);\n            return ({\n                \"AlertBox.useEffect\": ()=>clearTimeout(timer)\n            })[\"AlertBox.useEffect\"];\n        }\n    }[\"AlertBox.useEffect\"], []);\n    return showAlertBox && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"alert-box\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"close-btn\",\n                onClick: closeAlertBox,\n                children: \"✖\"\n            }, void 0, false, {\n                fileName: \"C:\\\\codebase\\\\my-saas\\\\first-saas\\\\components\\\\AlertBox.js\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, undefined),\n            \"Thank you awesome human for checking out this shitty page! ❤️\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"C:\\\\codebase\\\\my-saas\\\\first-saas\\\\components\\\\AlertBox.js\",\n                lineNumber: 24,\n                columnNumber: 70\n            }, undefined),\n            \" I just learned how to install npm and set up analytics for this page! \\uD83D\\uDE80\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"C:\\\\codebase\\\\my-saas\\\\first-saas\\\\components\\\\AlertBox.js\",\n                lineNumber: 24,\n                columnNumber: 149\n            }, undefined),\n            \" I'm watching you... \\uD83D\\uDC40\"\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\codebase\\\\my-saas\\\\first-saas\\\\components\\\\AlertBox.js\",\n        lineNumber: 20,\n        columnNumber: 7\n    }, undefined);\n};\n_s(AlertBox, \"h4OajxyidabK/7KyAgkKwApDncE=\");\n_c = AlertBox;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AlertBox);\nvar _c;\n$RefreshReg$(_c, \"AlertBox\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0FsZXJ0Qm94LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUQ7QUFFbkQsTUFBTUcsV0FBVzs7SUFDZixNQUFNLENBQUNDLGNBQWNDLGdCQUFnQixHQUFHSiwrQ0FBUUEsQ0FBQztJQUVqRCxNQUFNSyxnQkFBZ0I7UUFDcEJELGdCQUFnQjtJQUNsQjtJQUVBSCxnREFBU0E7OEJBQUM7WUFDUixNQUFNSyxRQUFRQzs0Q0FBVztvQkFDdkJILGdCQUFnQjtnQkFDbEI7MkNBQUc7WUFFSDtzQ0FBTyxJQUFNSSxhQUFhRjs7UUFDNUI7NkJBQUcsRUFBRTtJQUVMLE9BQ0VILDhCQUNFLDhEQUFDTTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0M7Z0JBQU9ELFdBQVU7Z0JBQVlFLFNBQVNQOzBCQUFlOzs7Ozs7WUFFN0M7MEJBQ29ELDhEQUFDUTs7Ozs7WUFBSzswQkFBeUUsOERBQUNBOzs7OztZQUFLOzs7Ozs7O0FBSTFKO0dBekJNWDtLQUFBQTtBQTJCTixpRUFBZUEsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsiQzpcXGNvZGViYXNlXFxteS1zYWFzXFxmaXJzdC1zYWFzXFxjb21wb25lbnRzXFxBbGVydEJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEFsZXJ0Qm94ID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtzaG93QWxlcnRCb3gsIHNldFNob3dBbGVydEJveF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGNsb3NlQWxlcnRCb3ggPSAoKSA9PiB7XHJcbiAgICBzZXRTaG93QWxlcnRCb3goZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBzZXRTaG93QWxlcnRCb3godHJ1ZSk7XHJcbiAgICB9LCA0MDAwKTtcclxuXHJcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVyKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICBzaG93QWxlcnRCb3ggJiYgKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFsZXJ0LWJveFwiPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiY2xvc2UtYnRuXCIgb25DbGljaz17Y2xvc2VBbGVydEJveH0+XHJcbiAgICAgICAgICDinJZcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICBUaGFuayB5b3UgYXdlc29tZSBodW1hbiBmb3IgY2hlY2tpbmcgb3V0IHRoaXMgc2hpdHR5IHBhZ2UhIOKdpO+4jzxiciAvPiBJIGp1c3QgbGVhcm5lZCBob3cgdG8gaW5zdGFsbCBucG0gYW5kIHNldCB1cCBhbmFseXRpY3MgZm9yIHRoaXMgcGFnZSEg8J+agDxiciAvPiBJJ20gd2F0Y2hpbmcgeW91Li4uIPCfkYBcclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFsZXJ0Qm94OyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiQWxlcnRCb3giLCJzaG93QWxlcnRCb3giLCJzZXRTaG93QWxlcnRCb3giLCJjbG9zZUFsZXJ0Qm94IiwidGltZXIiLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiZGl2IiwiY2xhc3NOYW1lIiwiYnV0dG9uIiwib25DbGljayIsImJyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/AlertBox.js\n"));

/***/ })

});